<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.6 -->

<plugin>
  <name>maven-cucumber-reporting</name>
  <description>This project provides a maven mojo for using cucumber-reporting to publish pretty html reports for Cucumber. It works by generating html from the cucumber json report formatter. So can be used anywhere a json report is generated. Current use is in the cucumber jenkins plugin and a maven mojo to generate the same report from mvn command line when running locally.</description>
  <groupId>net.masterthought</groupId>
  <artifactId>maven-cucumber-reporting</artifactId>
  <version>5.5.5-SNAPSHOT</version>
  <goalPrefix>cucumber-reporting</goalPrefix>
  <mojos>
    <mojo>
      <goal>generate</goal>
      <description>Goal which generates a Cucumber Report.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>verify</phase>
      <implementation>net.masterthought.cucumber.CucumberReportGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>buildNumber</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Build number.</description>
        </parameter>
        <parameter>
          <name>checkBuildResult</name>
          <type>java.lang.Boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Skip check for failed build result.</description>
        </parameter>
        <parameter>
          <name>classificationDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Location of the classification files to add to the report. Files in this directory will be matched against the patterns specified in the classificationFiles property. If not specified, defaults to the same value as outputDirectory.</description>
        </parameter>
        <parameter>
          <name>classificationFiles</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Array of PROPERTY files to process</description>
        </parameter>
        <parameter>
          <name>classifications</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional attributes to classify current test run.</description>
        </parameter>
        <parameter>
          <name>inputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Location of the Cucumber JSON files to generate the report from. Files in this directory will be matched against the patterns specified in the jsonFiles property. If not specified, defaults to the same value as outputDirectory.</description>
        </parameter>
        <parameter>
          <name>jsonFiles</name>
          <type>java.lang.String[]</type>
          <required>true</required>
          <editable>true</editable>
          <description>Array of JSON files to process</description>
        </parameter>
        <parameter>
          <name>mergeFeaturesById</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Merge features with the same ID so scenarios are be merged into single feature.</description>
        </parameter>
        <parameter>
          <name>mergeFeaturesWithRetest</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Merge features and scenarios from different JSON files of different runs into a single report by features&apos; and scenarios&apos; ids.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location to output the HTML report to.</description>
        </parameter>
        <parameter>
          <name>projectName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Name of the project.</description>
        </parameter>
        <parameter>
          <name>setSkippedAsNotFailing</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Consider skipped tests as not failed ones.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass generation of Cucumber Reports entirely.</description>
        </parameter>
        <parameter>
          <name>skipEmptyJSONFiles</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skips JSON reports which have been parsed but have none features or are empty file at all.</description>
        </parameter>
        <parameter>
          <name>treatPendingAsFailed</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Treat &apos;pending&apos; steps as failures when using checkBuildResult=true.</description>
        </parameter>
        <parameter>
          <name>treatUndefinedAsFailed</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Treat &apos;undefined&apos; steps as failures when using checkBuildResult=true.</description>
        </parameter>
        <parameter>
          <name>trendsFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>File where the trends is stored.</description>
        </parameter>
        <parameter>
          <name>trendsLimit</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>File where the trends is stored.</description>
        </parameter>
      </parameters>
      <configuration>
        <buildNumber implementation="java.lang.String" default-value="1">${build.number}</buildNumber>
        <checkBuildResult implementation="java.lang.Boolean" default-value="true"/>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}/cucumber-reports"/>
        <projectName implementation="java.lang.String">${project.name}</projectName>
        <skip implementation="boolean" default-value="false">${cucumber.report.skip}</skip>
        <treatPendingAsFailed implementation="java.lang.Boolean" default-value="false"/>
        <treatUndefinedAsFailed implementation="java.lang.Boolean" default-value="false"/>
      </configuration>
    </mojo>
  </mojos>
</plugin>